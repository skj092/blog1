{
  
    
        "post0": {
            "title": "Evolution of Artificial Neural Network(ANN)",
            "content": "Artificial Intelligence . Artificial intelligence (AI) is a branch of computer science capable of performing tasks that typically require human intelligence. .",
            "url": "https://skj092.github.io/blog/2020/07/05/EvolutionofArtificialNeuralNetwork(ANN).html",
            "relUrl": "/2020/07/05/EvolutionofArtificialNeuralNetwork(ANN).html",
            "date": " • Jul 5, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Pytorch - Your Favourite Deep Learning Library",
            "content": "Some most common operation using Pytorch . Pytorch is an open source machine learning library probably easiest to start with. It is built by Facebook. In this notebook I will write and discuss five most common and important functions in pytorch. . torch.transpose() | torch.stack() | torch.where() | torch.backward() | torch.add() | . 1. transpose() . In linear algebra, the transpose of a matrix is an operator which flips a matrix over its diagonal, that is it switches the row and column indices of the matrix by producing. Here we will transpose tensor using pytorch transpose function. . . x is a 2-D tensor. we swapped dimension 0 to dimension 1 using torch.transpose() . . we swapped dimension 1 to dimension 0. . . We need to put the dimension which is going to be swapped without. And if we put same dimension twice it has no effect. . Transpose function is very useful while matrix multiplication . 2. stack() . This function conconate every new tensor in new dimension. It add every new tensor to additional dimension . . Here we stacked b over a and created an additional dimesion. . . Here b is the stack of 3 a tensor . To make an stack, all tensors need to be in equal size. . While working with images data, stack function is useful for numerical calculation. . For example- to calculate statistical values like mean, median, etc. Stacking makes easy to calculate all of these. . 3. where() . Returns tensor of element with given condition . . torch.where() returns a tensor with values y if x&gt;0 else it return x. . . here we find the difference between x and y. This function can be used as a loss function in binary classification problems, where the target variable is similar like x and predicted value like y. . . If size of y is less then x then pytorch automatically expand y to the size of x without additional memory. However if the size of y is greater then x, the it doesn’t work. . This function can be used as a loss function in binary classification problems. . 4. backward() . This function is most important function in mathine leanring. It calculate the gradient of a function. . . To calculate gradient we need to set requires_grad = True. . While updating the weight in gradient descent backword function is used to update the weight. . 5. add() . To add two tensor . . Here add function just work like + operator. . . As you can see above the size of y is not the size of x. But pytorch expand the size of y by replacating its data and do elementwise operation. . . Here the size of y is greator then the size of x but x doesn’t expand. Pytorch expand in every dimension, if it increase the dimension of x then it will become 3*3 still doesn’t match the size of y. . It is very helpful while doing tensor operation. Additional operator is one of the most used operator . Conclusion . We have covered five most useful pytorch function. Go the the pytorch documentation and write five function of your choice. . Reference . Official Pytorch Documentation | .",
            "url": "https://skj092.github.io/blog/markdown/2020/01/14/Pytorch.html",
            "relUrl": "/markdown/2020/01/14/Pytorch.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I am a mathematics graduate passionate about data science in general deep learning in particular. . Projects : . Data Analysis | Machine Learning | . Skills and Certificates : . Data Science, Imarticus Learning | Python | Deep Learning with PyTorch Zero to GANs | . Education : . B.Sc Mathematics, Mithibai College, Mumbai University 04/2015-03/2018 Main Courses Algebra, Calcular, Descrete Mathematics, Numerical Analysis . Courses and Workshops . Machine Learning A-Z | Practical Deep Learning for Coder | Mini MTTS 2016 : Mathematics Research Training Workshop | .",
          "url": "https://skj092.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://skj092.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}